# https://help.github.com/en/categories/automating-your-workflow-with-github-actions
# https://github.com/krakjoe/apcu/blob/5015af484a3f48289442cf1aff6a89f0f5aa3769/.github/workflows/config.yml

on:
  - pull_request
  - push

name: "Continuous Integration"

jobs:

  linux:
    name: "Build and Tests (Linux)"

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        php: ["8.2", "8.1", "8.0", "7.4", "7.3", "7.2", "7.1", "7.0"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: "Install liblzma"
        run: sudo apt-get install -y liblzma-dev

      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP ${{ matrix.php }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: "Compile extension"
        run: |
          phpize
          ./configure
          make
          sudo make install

      - name: "Run tests"
        run: make test


  windows:
    name: "Build and Tests (Windows)"

    defaults:
      run:
        shell: cmd

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2019", "windows-2022"]
        php: ["8.2", "8.1", "8.0"] # , "7.4", "7.3", "7.2", "7.1", "7.0"
        arch: ["x64"] # , "x86"
        ts: ["ts"] # , "nts"
        exclude:
          - {os: "windows-2019", php: "8.2"}
          - {os: "windows-2019", php: "8.1"}
          - {os: "windows-2019", php: "8.0"}
          - {os: "windows-2019", php: "7.4"}
          - {os: "windows-2019", php: "7.3"}
          - {os: "windows-2022", php: "7.2"}
          - {os: "windows-2022", php: "7.1"}
          - {os: "windows-2022", php: "7.0"}

    runs-on: ${{matrix.os}}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP SDK ${{ matrix.php }}"
        uses: codemasher/setup-php-sdk@output-vs
        id: sdk
        with:
          version: ${{ matrix.php }}
          arch: ${{ matrix.arch }}
          ts: ${{ matrix.ts }}
          deps: liblzma

      - name: "Enable Developer Command Prompt"
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          toolset: ${{ steps.sdk.outputs.toolset }}

      # Build
      - name: "phpize"
        run: phpize
      - name: "configure build"
        run: configure --enable-xz --with-prefix=${{ steps.sdk.outputs.prefix }}
      - name: "make"
        run: nmake
      - name: "test"
        run: nmake test

      # this works but is there a proper windows (cmd) way? setting env vars seems messy/broken in cmd
      - name: "Determine filename tag"
        shell: bash
        run: |
          if ${{ contains(github.ref_type, 'tag') }} == true; then
            FILE_TAG=${{ github.ref_name }}
          else
            FILE_TAG=${GITHUB_SHA:0:7}
          fi
          echo "file_tag=${FILE_TAG}-${{ matrix.php }}-${{ matrix.ts }}-${{ steps.sdk.outputs.vs }}-${{ matrix.arch }}" >> $GITHUB_ENV

      - name: "Package"
        run: |
          if exist x64 (
            if exist x64\Release (set prefix=x64\Release) else (set prefix=x64\Release_TS)
          ) else (
            if exist Release (set prefix=Release) else (set prefix=Release_TS)
          )
          md .artifact
          copy %prefix%\php_xz.dll .artifact\php_xz-${{ env.file_tag }}.dll

      - name: "Upload artifacts"
        uses: actions/upload-artifact@v3
        if: contains(github.ref_type, 'tag')
        with:
          name: php_xz-${{ github.sha }}
          path: .artifact

      - name: "Attach file to release"
        uses: softprops/action-gh-release@v1
        if: contains(github.ref_type, 'tag')
        with:
          files: .artifact\php_xz-${{ env.file_tag }}.dll
